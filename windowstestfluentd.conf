    # This file collects and filters all Kubernetes container logs. Should rarely need to modify it.
    # Do not directly collect fluentd's own logs to avoid infinite loops.
    <label @FLUENT_LOG>
      <match fluent.**>
        @type null
      </match>
    </label>
    <source>
      @type tail
      path C:/Users/rahasija/k8sprojects/abc.txt ## Update pod prefix name
      tag azuremigrate-partnername # Add tag azuremigrate on log, you can use for routing in source directive.
      read_from_head true
      <parse>
        @type multi_format
        # Read logs in JSON format for Kubernetes v1.18-
        <pattern>
          format json
        </pattern>
        <pattern>
          format  regexp
          expression /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/
        </pattern>
      </parse>
    </source>  

    <filter azuremigrate-partnername>
      @type parser
      key_name log
      <parse>
        @type json
        json_parser json
      </parse>
      remove_key_name_field true # this removes the log field if successfully parsed as JSON
      emit_invalid_record_to_error true # In case of unparsable log lines or CRI logs. Keep fluentd's error log clean
    </filter>    

    <filter azuremigrate-partnername>
      @type record_transformer
      enable_ruby true
      <record>
        systemData ${ if record.has_key?('systemData'); then record ["systemData"]; else record["systemData"] = "{}"; end}
        ServiceEventName ${ if record.has_key?('ServiceEventName'); then record ["ServiceEventName"]; else record["ServiceEventName"] = "NonTelemetryEvent"; end}
      </record>
    </filter>

    <filter azuremigrate-partnername>
      @type parser
      key_name systemData
      <parse>
        @type json
        json_parser json
      </parse>
      reserve_data true # this preserves fields from the original record
      remove_key_name_field true # this removes the log field if successfully parsed as JSON
      emit_invalid_record_to_error false # In case of unparsable log lines or CRI logs. Keep fluentd's error log clean
    </filter> 

    <match azuremigrate-partnername>
      @type rewrite_tag_filter
      <rule>
        key     ServiceEventName
        pattern ^(.+)$
        tag     azuremigrate-partnername$1
      </rule>
    </match>

    <match azuremigrate-partnernameTelemetryEvent>
      @type rewrite_tag_filter
      <rule>
        key     LogLevel
        pattern ^(.+)$
        tag     TelemetryEvent
      </rule>
    </match>

    <match azuremigrate-partnernameNonTelemetryEvent>
      @type rewrite_tag_filter
      <rule>
        key     LogLevel
        pattern ^(.+)$
        tag     azuremigrate-partnernameNonTelemetryEvent.$1 
      </rule>
    </match>

    <match azuremigrate-partnernameNonTelemetryEvent.ERROR>
      @type rewrite_tag_filter
      <rule>
        key     LogLevel
        pattern ^(.+)$
        tag     ErrorEvent
      </rule>
    </match>

    <match azuremigrate-partnernameNonTelemetryEvent.INFO>
      @type rewrite_tag_filter
      <rule>
        key     LogLevel
        pattern ^(.+)$
        tag     DiagnosticEvent
      </rule>
    </match>

    <match azuremigrate-partnernameNonTelemetryEvent.**>
      @type rewrite_tag_filter
      <rule>
        key     LogLevel
        pattern ^(.+)$
        tag     OtherDiagnosticEvent
      </rule>
    </match>

    <match **>
      @type stdout
    </match>
